#!/bin/sh

# PROVIDE: natshd
# REQUIRE: LOGIN NETWORKING
# KEYWORD: shutdown

. /etc/rc.subr

name=natshd
rcvar=${name}_enable

load_rc_config $name

: ${natshd_enable:="NO"}
: ${natshd_user:="natshd"}
: ${natshd_group:="natshd"}
: ${natshd_config:="SYSTEM_CONFIG_DIR_PLACEHOLDER/config.toml"}
: ${natshd_log_file:="/var/log/natshd.log"}
: ${natshd_pidfile:="/var/run/natshd/natshd.pid"}

pidfile="${natshd_pidfile}"
command="SYSTEM_BIN_DIR_PLACEHOLDER/natshd"

# Default flags for the natshd service
: ${natshd_flags:="-config ${natshd_config}"}

# Use daemon for background execution
natshd_user="${natshd_user}"
natshd_group="${natshd_group}"

start_precmd="natshd_precmd"
start_cmd="natshd_start"
stop_cmd="natshd_stop"

natshd_precmd()
{
    # Create required directories
    install -d -o root -g wheel -m 755 /var/run/natshd
    install -d -o ${natshd_user} -g ${natshd_group} -m 755 /var/lib/natshd
    
    # Ensure log file exists with proper permissions
    touch ${natshd_log_file}
    chown ${natshd_user}:${natshd_group} ${natshd_log_file}
    chmod 644 ${natshd_log_file}
}

natshd_start()
{
    echo "Starting ${name}."
    /usr/sbin/daemon -f -p ${pidfile} -u ${natshd_user} ${command} ${natshd_flags}
}

natshd_stop()
{
    if [ -f "${pidfile}" ]; then
        pid=$(cat "${pidfile}")
        if kill -0 "${pid}" 2>/dev/null; then
            echo "Stopping ${name}."
            kill "${pid}"
            # Wait for process to exit
            timeout=10
            while [ $timeout -gt 0 ] && kill -0 "${pid}" 2>/dev/null; do
                sleep 1
                timeout=$((timeout - 1))
            done
            if kill -0 "${pid}" 2>/dev/null; then
                echo "Warning: ${name} did not stop gracefully, sending SIGKILL"
                kill -9 "${pid}" 2>/dev/null || true
            fi
            rm -f "${pidfile}"
        else
            echo "${name} not running? (removing stale pidfile)"
            rm -f "${pidfile}"
        fi
    else
        echo "${name} not running? (check ${pidfile})"
        return 1
    fi
}

# Custom status function to check the actual process
status_cmd="natshd_status"

# Custom run command to run in foreground as configured user  
extra_commands="run"
run_cmd="natshd_run"

natshd_status()
{
    if [ -f "${pidfile}" ]; then
        pid=$(cat "${pidfile}")
        if kill -0 "${pid}" 2>/dev/null; then
            echo "${name} is running as pid ${pid}."
            return 0
        else
            echo "${name} is not running (stale pidfile)."
            rm -f "${pidfile}"
            return 1
        fi
    else
        echo "${name} is not running."
        return 1
    fi
}

natshd_run()
{
    echo "Running ${name} in foreground as user ${natshd_user}..."
    echo "Config: ${natshd_config}"
    echo "Press Ctrl+C to stop"
    echo ""
    
    # Ensure required directories exist
    natshd_precmd
    
    # Run the service in foreground as the configured user
    # Use daemon without -f flag to keep it in foreground
    /usr/sbin/daemon -u ${natshd_user} ${command} ${natshd_flags}
}

run_rc_command "$1"
